// Code generated by go-bindata.
// sources:
// config/views/templates/auth/confirm_email.html.tpl
// config/views/templates/auth/login.html.tpl
// config/views/templates/auth/recover.html.tpl
// config/views/templates/auth/recover_complete.html.tpl
// config/views/templates/auth/recover_email.html.tpl
// config/views/templates/auth/register.html.tpl
// config/views/templates/category_show.tmpl
// config/views/templates/home_index.tmpl
// config/views/templates/layouts/application.tmpl
// config/views/templates/product_show.tmpl
// config/views/templates/qor/assets/javascripts/qor_demo.js
// config/views/templates/qor/assets/stylesheets/qor_demo.css
// config/views/templates/qor/dashboard.tmpl
// config/views/templates/widgets/banner.tmpl
// config/views/templates/widgets/banner2.tmpl
// config/views/templates/widgets/products.tmpl
// config/views/templates/widgets/slideshow.tmpl
// DO NOT EDIT!

// +build bindatafs

package views

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _authConfirm_emailHtmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xc1\x0d\x82\x50\x0c\x06\xe0\xfb\x9b\xe2\x0f\x03\xd8\xbc\x7b\xed\xc5\x05\x5c\xa1\x36\x25\x25\x22\x25\x15\x0e\x86\xb0\xbb\x0b\xb0\xc0\xc7\xd1\xe5\x91\xcb\x38\xd5\x07\xbf\xdc\x0b\x6a\x96\xfb\xb2\x31\x45\x97\xc6\xaf\x02\x49\xe3\x55\x9e\xb3\xeb\xd7\x61\xf3\x64\x6f\xb0\x22\xca\xc7\xfb\x70\x1c\xb7\xf3\x1c\x40\x12\x5e\xce\xa4\x82\x2d\x61\x17\x5c\x67\x5a\xa5\xfd\x03\x00\x00\xff\xff\x1c\x91\x1f\x04\x6d\x00\x00\x00")

func authConfirm_emailHtmlTplBytes() ([]byte, error) {
	return bindataRead(
		_authConfirm_emailHtmlTpl,
		"auth/confirm_email.html.tpl",
	)
}

func authConfirm_emailHtmlTpl() (*asset, error) {
	bytes, err := authConfirm_emailHtmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auth/confirm_email.html.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authLoginHtmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x4d\x8f\x9b\x30\x10\xbd\xf7\x57\x8c\x7c\x4f\x50\x7b\xac\x08\x6d\xa5\xbd\xf4\xb2\x5d\xb5\xab\x5e\x23\x03\x93\x60\xc5\x1f\xd4\x0c\x49\x56\x88\xff\x5e\x19\x9b\x04\x08\x21\x6d\xd5\xbd\xc0\x7a\xc6\xcf\xcf\xef\xbd\x09\x71\x2e\x8e\x90\x49\x5e\x55\x1b\x96\x19\x4d\x5c\x68\xb4\x2c\x79\x07\x00\x30\xac\x59\x73\x0a\xab\xd3\x4a\x66\x64\xad\x34\xf8\xc7\xea\xfd\x87\x41\xdb\xb4\x95\xd7\x54\x80\x34\x7b\xa1\x27\x4d\x5d\xe3\xce\x58\x05\x3c\x23\x61\xf4\x86\x35\x8d\x32\xb5\xa6\x92\x53\x81\x39\x30\xbf\xa9\x6d\x19\x28\xa4\xc2\xe4\x1b\xf6\xf2\xed\xc7\xeb\x0c\x4a\x7f\xe4\x7c\x05\xe0\x09\x95\x81\x2f\x59\xe6\xc0\x3f\x42\x8e\xc7\xcf\x7b\xa4\x5f\xc6\xae\x33\xa3\x22\xc2\x8a\x84\xde\xcf\x83\x46\x1d\xea\x7c\xad\x96\xc3\x2b\xae\xdc\x4d\xee\x70\x73\x7f\x4d\x23\x76\xb0\x46\x6b\x8d\x6d\xdb\xbb\x5d\x1d\xb0\x14\x3d\x70\xd7\xce\x92\xa6\xe9\x37\xc6\x91\x14\x4b\x67\xa0\xce\x17\xd0\xe3\xa5\xcd\xbe\x81\xa7\x28\x61\x67\xac\x33\x63\x5d\x5a\xa1\xb8\x7d\xfb\xfa\xd4\xb6\x8e\x04\x50\xf0\x64\x8d\x8a\x0b\xc9\xa0\xe3\xe3\x76\x3c\x40\x15\xba\xac\x09\xe8\xad\xc4\x0d\x23\x3c\x13\xeb\xef\xe7\x34\x5b\xb9\x04\x5a\x23\x19\x68\xae\xf0\xe6\x5c\x28\x25\xcf\xb0\x30\x32\xc7\x8e\x14\x09\x92\x08\xe3\x96\x23\x97\xf5\x64\xe7\x4f\xb7\xe4\x68\xdf\x17\xa3\x93\x72\x49\xab\xe0\x59\x55\x98\xd3\x77\xcc\xcc\x11\x6d\xdb\x5e\x89\xef\x91\x56\x25\xaf\xaa\x93\xb1\x39\x0b\xca\xff\x1f\x75\x2f\xa8\x7f\x2a\xf0\x0c\xcf\x98\x43\x61\x71\x77\x33\x53\xd6\x37\x74\x53\x35\x7f\x97\x95\x14\xfa\x30\x26\xe4\x3b\xb6\x63\x5e\x3c\x79\x14\xb7\x1b\xef\xaf\x00\x0b\xfe\x5f\x9b\x46\xce\xbf\xf4\xcb\x49\x9c\x5a\x88\xfe\x22\x71\x85\xc8\x73\xd4\x83\x78\x9d\x2b\xbb\x7b\xe6\x0a\xc7\xd1\x71\xab\xaf\xe6\x80\xda\x2d\x2f\xe0\x87\xdc\x3c\x18\x74\x6f\x86\x42\x95\x76\x6e\x48\x91\x78\xf7\x93\x11\xb5\xac\xc0\xec\x90\x9a\x73\x4f\xce\xaa\x0b\x23\xb2\x35\xb2\x04\x86\x36\xd8\x80\xb7\x55\x38\x8c\x46\x47\xa8\xf7\x62\x31\xd0\x0f\x44\x4b\x6b\x22\xa3\x03\xb5\xaa\x4e\x95\xb8\x4e\x6a\xa8\xf9\xc7\x76\x1b\xb2\x3b\x8e\x89\x2f\x7a\x6a\xfe\xfd\x9f\xa7\x6f\x28\xe2\x5e\x54\xd4\x8b\x38\x3c\xee\x19\x31\x07\xae\xfb\x1f\xf6\x4f\xee\x60\xb8\x9f\x7b\x0f\xc3\xa6\xc3\x76\x29\x84\x50\x8f\xd4\x9c\x67\x5e\xcb\x19\xe6\x71\xe4\xc2\x3c\xf9\x0c\x46\xa3\x8f\xd2\xe0\xdf\xf0\x1a\x1e\xbf\x03\x00\x00\xff\xff\xb7\x86\xc3\x83\x90\x07\x00\x00")

func authLoginHtmlTplBytes() ([]byte, error) {
	return bindataRead(
		_authLoginHtmlTpl,
		"auth/login.html.tpl",
	)
}

func authLoginHtmlTpl() (*asset, error) {
	bytes, err := authLoginHtmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auth/login.html.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authRecoverHtmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x4f\x8f\xd3\x3e\x10\xbd\xff\x3e\xc5\xc8\xda\xdf\xb1\x0d\x70\x5c\x92\x9c\xb8\x70\x81\x95\x58\x71\xad\xdc\x64\xd2\x8c\xf0\x9f\x68\x32\xe9\xb6\x32\xf9\xee\xc8\x49\x5a\x42\xba\x61\x05\x02\x71\x1a\x7b\xe6\x79\x9e\x3d\xef\xc9\x69\x49\x47\x28\x8c\x6e\xdb\x4c\x15\xde\x89\x26\x87\xac\xf2\xff\x00\x00\xe6\x35\xf6\x4f\x53\x76\x59\x29\xbc\xe9\xac\x83\x31\x6c\x5e\xbf\x99\xc1\x96\x50\xdd\x49\x0d\xc6\x1f\xc8\x2d\x40\x03\xb0\xf2\x6c\x41\x17\x42\xde\x65\x2a\x04\xeb\x3b\x27\x8d\x96\x1a\x4b\x50\x8c\x85\x3f\x22\xab\xbe\x57\x60\x51\x6a\x5f\x66\xea\xe1\xe3\xa7\xc7\x67\xfa\x0c\xbd\x3a\x33\xe7\xdc\xc4\xd6\x2b\xd0\x01\x6e\x68\xbd\x38\x02\xf4\x1e\x0d\xb4\x72\x36\x98\x29\xab\xf9\x40\x6e\xb3\xf7\x22\xde\xde\xbf\x6a\x4e\x6f\x15\x54\x9e\xe3\xa5\xb7\x0d\x93\xd5\x7c\x7e\xff\xae\xef\x55\x1e\x02\xc8\xf5\xee\x5b\xb4\x9a\x8c\x82\xbe\x4f\x93\xa1\xdd\x0b\x94\xe4\x9a\x4e\x40\xce\x0d\x66\x4a\xf0\x24\x0a\x9c\xb6\x78\x43\x02\x47\x6d\xba\x45\xfa\x73\x4c\xc5\x5a\xf2\x73\x8e\x10\xee\x1a\x2a\xe1\x3e\x83\x79\xcb\x10\x9e\x48\x6a\xd8\x22\x73\x7b\xdd\xdd\x21\xb3\xa1\x56\x22\x98\x5c\x89\x27\xd8\x42\x3c\x1c\x01\xac\xdd\x01\xaf\x88\xbe\x4f\x9b\xcb\xf0\x91\xd9\x73\x9c\xc3\x36\xbe\xba\xc9\x43\x40\x37\x1c\x99\x87\x75\x59\x92\xa8\xcb\x3f\x56\xad\xf0\xae\x22\xb6\xbb\x3f\xa4\xde\xa5\xdd\xba\x8a\x13\xe2\xe1\x37\xc4\x2c\x6e\xd4\x84\xaf\xd0\x30\x39\xa9\xe0\xca\xfc\x7f\xab\x7e\x45\xe3\xe2\x2f\x8b\x7c\x33\xad\x9a\xca\x12\xdd\xcc\xed\xa7\x96\xab\x0f\xda\xe2\x8f\x63\x8a\xd9\x47\xff\x05\xdd\x0b\xa3\x19\x4d\xb4\x6e\x11\xca\xd3\x7d\x27\xe2\xdd\x44\xdf\x76\x7b\x4b\xa2\x2e\x8f\x9b\x6a\x63\xd8\xed\xa6\xc1\x2e\x4d\x32\x96\x47\x77\x8c\xeb\x7c\x9d\x37\x4d\xba\x67\xdc\x93\x26\xf1\x93\x5a\xfc\x9d\x49\x49\xc7\xd9\xaf\xfb\x7d\x3b\x2d\xa7\xf0\x2d\x00\x00\xff\xff\x61\xd2\x85\xb2\xc5\x05\x00\x00")

func authRecoverHtmlTplBytes() ([]byte, error) {
	return bindataRead(
		_authRecoverHtmlTpl,
		"auth/recover.html.tpl",
	)
}

func authRecoverHtmlTpl() (*asset, error) {
	bytes, err := authRecoverHtmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auth/recover.html.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authRecover_completeHtmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\xcd\x6e\xab\x30\x10\x85\xf7\x79\x8a\x91\x75\xb7\x17\xee\x3a\x17\x58\x75\xd3\x4d\x5b\xa9\xd9\x47\x06\x86\x60\x15\xff\x68\x3c\xe4\x47\x96\xdf\xbd\x32\x24\xa1\x6d\x14\xa9\x8b\xac\xf0\x58\x73\xce\x81\x4f\x87\xa2\xb3\xa4\x41\x36\xac\xac\x29\x45\x08\xda\x8e\x86\x9d\xe4\x1e\x5b\x10\x84\x8d\xdd\x23\xe5\x8d\xd5\x6e\x40\x46\x11\xa3\x00\x8d\xdc\xdb\xb6\x14\x6f\xaf\xef\x1b\x51\xad\x00\x8a\x41\xd6\x38\x80\xe7\xd3\x80\xa5\xd0\x92\x76\xca\xfc\xad\x2d\xb3\xd5\xeb\x7f\xee\xf8\x5f\x40\x67\x29\x79\x67\x8e\x94\x96\x74\x7a\x7e\x8a\x51\x54\x21\x00\x5f\x23\xb6\x97\x88\xcc\xe0\x61\xeb\xa4\xf7\x07\x4b\xad\x80\x18\x8b\x7c\xb2\x9f\x82\x94\x71\x23\x03\x9f\x1c\x96\xa2\x57\x6d\x8b\x46\x80\x91\x1a\x4b\xc1\xf6\x23\x0d\x7b\x39\x8c\x38\x45\x4d\x17\xe9\x75\xf3\x1b\xe5\xe2\x3e\x6b\x97\xf9\x2c\x4f\xa2\xa2\xa6\x59\x1a\xc2\x41\x71\x0f\x19\x12\xf9\x18\xcf\xd3\x1f\x24\x1a\x94\x67\x58\x97\xa0\x4c\x8b\x47\xc8\x60\xf1\x49\x6b\x24\xcd\x0e\xaf\x7b\x31\x16\xde\x49\x53\x85\x90\xa5\x2f\x9a\xce\x73\x42\x08\x68\xda\x24\xf8\xfa\x78\x38\xd4\xc6\x9a\x4e\x91\xde\xfe\x16\xee\x4f\x44\x17\xfd\xa3\x50\xdd\xf8\x3d\x04\xd9\xfd\x7a\x84\x90\x1d\x3d\x75\x2f\x52\x63\xea\xc4\x52\x93\x74\xbb\xf9\x5e\x95\x7a\x64\xb6\xe6\x6c\xe3\xc7\x5a\x2b\xbe\xcb\x75\xde\x9d\x49\xce\xe7\x0b\x8d\x22\x4f\x3f\x56\xb5\xfa\x0c\x00\x00\xff\xff\xaf\x33\x57\xdf\x60\x03\x00\x00")

func authRecover_completeHtmlTplBytes() ([]byte, error) {
	return bindataRead(
		_authRecover_completeHtmlTpl,
		"auth/recover_complete.html.tpl",
	)
}

func authRecover_completeHtmlTpl() (*asset, error) {
	bytes, err := authRecover_completeHtmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auth/recover_complete.html.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authRecover_emailHtmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xd1\x09\xc2\x40\x0c\x06\xe0\xf7\x9b\xe2\xa7\x03\x18\xfa\x1e\x33\x83\xb8\x41\x0c\x91\x88\xc5\x94\xd8\x13\xe4\xb8\xdd\x5d\xc0\x05\x3e\x8e\x55\xae\x6e\xf9\xf1\xc2\x37\x7b\x41\xcd\xb2\xbf\x0e\xa6\x58\xa5\xf1\xad\x40\xd2\x78\x97\xcb\xe6\xfa\x76\xd8\xf6\xb0\x27\x58\x11\xe5\xf7\xf3\x32\xc6\x69\xce\x05\x24\xe1\xe5\x4c\x2a\x38\x12\xf5\x97\xdb\xa5\xfd\x02\x00\x00\xff\xff\x9d\xc9\x73\xb1\x6c\x00\x00\x00")

func authRecover_emailHtmlTplBytes() ([]byte, error) {
	return bindataRead(
		_authRecover_emailHtmlTpl,
		"auth/recover_email.html.tpl",
	)
}

func authRecover_emailHtmlTpl() (*asset, error) {
	bytes, err := authRecover_emailHtmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auth/recover_email.html.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authRegisterHtmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\xbd\x8e\xdb\x30\x0c\xc7\x67\xf7\x29\x08\xe1\xd6\x8b\xd1\x8e\x07\xc5\x53\x97\x2e\x45\x87\xa2\xeb\x41\xb1\x98\xb3\x50\x7d\x41\xa2\x93\x1c\x0c\xbd\x7b\x21\x7f\x3b\x46\x9b\x16\x5d\x42\x5a\xfc\x93\x14\x7f\x10\xc3\xa5\xba\x40\xad\x45\x8c\x47\x56\x3b\x4b\x42\x59\x0c\xac\xfa\x00\x00\xb0\x8e\x05\x77\x1d\x4f\xef\x23\xb5\xd3\xad\xb1\x30\x98\xe7\x8f\x9f\x56\xb2\x7b\xa9\x68\xa9\x81\x80\x6f\x2a\x52\xdf\xa4\x28\x8a\x82\x9f\x5d\x30\x20\x6a\x52\xce\x1e\x59\xd7\x19\xd7\x5a\xf2\x82\x1a\x94\xc0\x66\x6d\x4a\x0c\x0c\x52\xe3\xe4\x91\x79\x17\x69\x4c\x2e\x78\xab\xd7\xc5\x9f\x73\xb1\x29\x56\x70\xad\x26\xb7\xe0\x5a\x9c\x50\xc3\xd9\x85\xdc\xe4\xe0\x83\x32\x22\xbc\x7f\xf9\x9c\x12\xab\xba\x0e\x68\xe9\x75\x40\x23\x94\x66\x90\x12\x2f\xfb\xa4\xa5\x86\xb2\xbe\x25\xb0\xc2\xe0\xae\x08\xd0\xbb\xc7\x23\x23\xbc\x11\x83\x8b\xd0\x6d\x2f\xb9\x2a\x6a\x60\xd1\xfd\xc8\xe7\x29\x75\xdd\x21\xff\xa0\x95\x39\xd1\x6b\x51\x63\xe3\xb4\xc4\xfe\x6a\xa4\x48\x23\x6c\x6b\x97\xf3\x15\xba\xee\xc9\x2b\x09\x2f\xc7\x8d\x62\x6a\x84\x21\xc4\xf9\xeb\x09\x43\xd0\x2a\x52\x16\x2b\x2b\xf1\x06\x07\xc8\xc9\x59\x10\x84\x7d\xc3\x59\x91\x12\xf7\x13\x45\x0c\xc1\x85\x8c\xe4\x90\xe7\xf7\xd5\x78\xcd\xad\x99\xf8\x96\x19\xf0\x03\xd8\x5e\xc4\x78\x75\x41\xee\x30\xcf\x81\x47\xa4\x17\xe1\xc0\x78\xf9\xde\xa0\xfb\x36\x1f\xaf\x71\x6d\xc1\x0c\x73\xcf\xad\xff\x7e\xf0\x7f\x99\xb8\x76\xf6\xac\x82\x79\xfd\xed\xe4\x3b\x01\xa4\xf4\xf2\x47\x04\xfb\x8c\x7b\x14\x0f\x67\xbe\x2f\xf1\x5f\xb3\xf7\x8b\xad\x55\xc5\x4f\x2d\x91\xb3\xe3\x6d\x62\x7b\x32\x8a\xd8\x54\x75\x8c\x0d\xe6\xf5\x75\x7c\xaf\x3b\x1a\x43\x7c\x78\x05\x83\x5f\x6d\x31\x0f\x20\x86\x16\x8d\x92\x12\x2d\x5b\x76\xf0\x16\xc3\xf9\xab\x30\x98\xd7\x64\x5e\xbb\xfe\xf4\xbb\xfb\x89\x76\xbd\x3d\xbc\x6c\x47\xbc\xbc\xcc\xff\x13\xbd\xcf\x4b\xa9\x2e\xd9\x9b\x9c\xd1\x8e\xe6\x57\x00\x00\x00\xff\xff\x7e\x7a\xfc\xf0\x1f\x05\x00\x00")

func authRegisterHtmlTplBytes() ([]byte, error) {
	return bindataRead(
		_authRegisterHtmlTpl,
		"auth/register.html.tpl",
	)
}

func authRegisterHtmlTpl() (*asset, error) {
	bytes, err := authRegisterHtmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auth/register.html.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _category_showTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x51\x6b\xdb\x30\x14\x85\xdf\xf3\x2b\x2e\xda\x5e\x63\x8d\x6c\x5d\xd7\x21\x0b\xc2\xb2\xc0\x60\x1b\xa1\xb0\xe7\xa0\xda\x37\xf6\x6d\x65\xc9\x93\xe4\xb4\x41\xe4\xbf\x8f\x58\xf6\xe6\x14\x32\xf2\x64\xd9\xfe\xce\x39\x97\xab\x23\x4a\xda\x43\xa1\x95\xf7\x39\x2b\xac\x09\x8a\x0c\x3a\x26\x67\x00\xd3\x3f\xce\x3e\xf7\xdf\x00\x44\xbd\x48\x07\x80\x18\xb3\x7b\xf4\x9d\x0e\xd9\x17\x15\xb0\xb2\xee\xf0\x53\x35\x78\x3c\x26\x8e\x27\x50\xf0\x92\xf6\xfd\xa1\xd3\x13\x37\x70\xf6\x79\x1e\x6a\x87\x08\xad\xb3\x65\x57\x04\xbf\xdd\x6a\xf2\x61\x88\x89\xd1\x29\x53\x21\x8c\x09\x9b\x01\x1a\xdc\x01\x84\xa6\x7f\x63\xeb\xae\x31\x90\x1e\xf3\x0f\x6c\x9c\x0f\x40\x28\xa8\x1d\xee\x72\x16\x63\xb6\xc2\x9d\xea\x74\xd8\xa8\x50\x1f\x8f\x6c\xd4\x9e\x87\xcf\xe7\xd4\x54\x4c\x0a\x6a\x2a\xf0\xae\xe8\x75\x3f\x14\x99\x6f\x8d\xaa\xf0\xd7\xfd\xf7\x93\x50\xe9\x90\x33\x06\x5c\x0a\xae\xce\x92\x2e\x38\x06\x0a\x1a\xd9\xa5\x39\x64\x8c\x59\xda\xda\xb9\x5d\x7b\xc9\xae\x75\x54\xfc\xc7\x4e\xf8\x56\x99\x51\x4b\x01\x9b\x6d\x12\xc8\xb7\x31\x66\x9b\xd3\xf1\x94\x74\x82\xa4\xe0\xed\x24\x70\x72\xd9\xaf\x23\x0b\xab\xad\xf3\x93\xb5\x02\xf4\x31\x52\xed\x15\x69\xf5\xa0\x11\x12\x32\x18\x4f\x39\x02\x1f\x0e\x1a\x73\xf6\xa0\x8a\xa7\xca\xd9\xce\x94\x9f\xe1\xcd\xe2\x66\x79\xb3\x5a\x33\x29\x38\x5d\x41\x7f\x7a\xb7\x5a\xde\x2e\xaf\xa5\xd7\xeb\xd5\xfb\xc5\xe2\x5a\xfa\xf6\xf6\xee\xe3\xdd\xd7\x57\xf4\xdf\xce\xa6\x17\x4d\x63\x27\xd1\x94\x7d\x01\x05\xef\x74\xdf\x69\x4d\xe6\x09\xc2\xa1\xc5\x9c\x05\x7c\x09\xbc\xf0\x9e\x81\x43\x9d\xb3\x3e\xcc\xd7\x88\x61\xbc\x2c\x5e\x92\x0f\xbc\xb6\x0d\x6e\xc7\x0d\x67\x3d\xcf\xe5\x6c\x48\x9c\x09\x5f\x38\x6a\x43\x2a\x1f\xdf\xa3\x29\xad\xf3\xfc\xf1\x77\x87\xee\x90\xed\x34\xbe\x78\x4d\x25\xba\x79\x43\x26\x7b\xf4\xa7\xb1\x93\x40\xce\xfe\x04\x00\x00\xff\xff\x1f\x4a\x3e\x88\xc8\x03\x00\x00")

func category_showTmplBytes() ([]byte, error) {
	return bindataRead(
		_category_showTmpl,
		"category_show.tmpl",
	)
}

func category_showTmpl() (*asset, error) {
	bytes, err := category_showTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "category_show.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _home_indexTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x6e\x83\x30\x10\x45\xf7\x9c\x62\xe4\xae\x03\x6a\x23\x75\x45\x72\x88\x5e\xc0\x72\x60\x00\x4b\x30\x83\xec\x21\x2c\x2c\xdf\xbd\x52\x43\x29\xd0\x10\x45\x59\x31\x82\x79\xe8\xff\x67\x33\x73\x12\xc2\x68\xa5\x81\xf4\x0b\xfd\xd0\x0a\xc4\x98\x00\x84\x90\x0a\xf7\xfa\x62\x88\xd0\xc5\x98\x24\x00\x79\x69\xaf\x50\xb4\xc6\xfb\x93\x2a\x98\xc4\x58\x42\xa7\xce\x09\xc0\xfa\x9b\xe3\x71\x7a\xbb\x65\xda\xa1\x23\xb8\x3d\x0e\xef\x1f\xe0\xb1\x10\xcb\xa4\xb5\x58\x69\x71\x66\x00\xf2\xe6\x78\x0e\x01\x04\x54\xc3\x1d\xa6\x15\x1a\x19\x1c\xea\xde\x71\x39\x14\x92\xde\xd6\x21\xc6\x3c\x6b\x8e\x0b\xaa\x7f\x04\xf9\xe1\xb2\xe0\xfa\x39\x60\x56\xda\xeb\xd4\xe1\x6f\x0c\x61\xcb\xfb\x1f\x2b\xd3\xca\x46\x46\xcd\x5c\x12\x7a\x7f\xc7\xc5\xd2\xd3\x1d\x25\x4b\x55\xaf\xca\xfa\xa7\xeb\x37\xce\x9e\xa7\xad\xa9\x79\x7f\x47\xd1\xca\xcc\xd2\xc1\xab\x6d\x3e\xc1\x0b\xbb\x4d\x07\x03\x8d\xc3\xea\xa4\xde\xd4\xdd\x6c\x95\xa5\x52\x1b\x7d\x03\x21\x46\xc8\x6d\x57\x83\x77\xc5\x49\x65\xb6\x33\x35\xfa\xcc\x16\x4c\x07\xe3\x1c\x8f\x69\x4f\xb5\x82\xec\x9c\x67\x66\xa7\xc4\xe3\x78\x84\xa3\x6f\x51\x64\xbe\xde\xcf\x65\xac\x51\xf4\x02\x7d\x29\xe5\xee\xe1\xac\x7f\xae\x2d\x55\xfc\xd4\x39\xad\xc6\x69\x08\x01\xa9\x8c\x31\xf9\x0e\x00\x00\xff\xff\xab\xc3\x83\x8a\xfd\x03\x00\x00")

func home_indexTmplBytes() ([]byte, error) {
	return bindataRead(
		_home_indexTmpl,
		"home_index.tmpl",
	)
}

func home_indexTmpl() (*asset, error) {
	bytes, err := home_indexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "home_index.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _layoutsApplicationTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\xdd\x8e\xdc\x34\x14\xbe\xef\x53\xb8\xae\x84\x40\x22\x13\x95\x56\xb4\xa2\xc9\xa0\xb2\xac\x10\x12\xb4\xa8\xbb\xbd\xe0\x2a\xf2\x38\x27\x89\x5b\xc7\xce\xfa\x67\x66\xa7\x51\x24\xee\x78\x00\x24\xde\x02\xae\xb9\xe1\x6d\x2a\x78\x0d\xe4\xfc\xcc\x26\x93\x9f\xdd\xaa\x23\x71\xb3\xb3\x71\xce\xf9\xce\xf1\x77\x7e\x7c\xe2\xe0\x7e\x2c\xa9\xd9\x17\x80\x32\x93\xf3\xf5\xbd\xa0\xf9\x41\x28\xc8\x80\xc4\xee\x1f\x84\x82\x1c\x0c\x41\x99\x31\x85\x07\x57\x96\x6d\x43\x7c\x26\x85\x01\x61\xbc\xcb\x7d\x01\x18\xd1\xe6\x29\xc4\x06\xae\x8d\xef\x00\x9e\x21\x9a\x11\xa5\xc1\x84\xd6\x24\xde\x53\x8c\xfc\x06\xa9\x2c\x57\xaf\x40\x5b\x6e\x56\x17\xe7\x2f\x2f\x49\x5a\x55\x3d\x03\x82\xe4\x10\xe2\x2d\x83\x5d\x21\x95\xe9\xc1\xee\x58\x6c\xb2\x30\x86\x2d\xa3\xe0\xd5\x0f\x9f\x23\x26\x98\x61\x84\x7b\x9a\x12\x0e\xe1\xc3\x83\x85\x80\x33\xf1\x16\x29\xe0\x21\xd6\x66\xcf\x41\x67\x00\x06\xa3\x1c\x62\x46\x42\x4c\x38\xc7\x28\x53\x90\x84\xd8\x8f\x99\x36\xfe\x95\x54\x2b\xaa\x35\x6e\x95\x35\x55\xac\x30\x48\x2b\x1a\x62\x7f\x0b\x22\x96\x4a\xfb\x6f\xae\x2c\xa8\xfd\xea\x8d\xc6\xeb\xc0\x6f\x24\x6a\x82\xfc\x8e\xa1\x60\x23\xe3\x7d\x8b\x10\xb3\x2d\xa2\x9c\x68\x1d\xe2\x82\xa4\xe0\xed\x14\x29\x5a\xf4\x21\x01\xcf\xa9\x61\x52\x7c\x43\x54\x43\xc3\x41\xa2\x8f\xe0\x0c\x80\xea\xa9\xb7\x61\x01\xd5\x49\x38\x8e\x08\x13\x47\x42\x43\x14\x25\x77\x78\x7d\x6f\xf0\x1a\xa1\x80\x89\xc2\x1a\xe4\x22\x1f\x62\x9a\x01\x7d\xbb\x91\xd7\x18\xb1\xb8\xb3\xea\xe5\x20\xac\x36\xc4\xb8\x00\xf7\xdd\x89\xa2\xde\x9b\x9a\xe3\x10\xc7\x4c\x17\x9c\xec\xbf\x42\x42\x0a\x38\xc4\xa2\x67\x8d\x93\x0d\xf0\x11\x8e\xdc\x30\x0e\x8c\x4a\x81\x51\x22\xd5\x84\xe5\x63\x1c\xe7\x77\x87\x92\x13\x03\xca\xa5\x80\x03\xd0\x78\xfd\xc9\x83\xeb\xf3\x47\x67\x4f\x9e\x05\x3e\x1b\x99\xf7\x6b\xfb\xa3\xe5\x1e\x49\x54\x72\x9b\x0b\xd4\xfc\x78\x5f\xa0\xce\x47\x2e\x53\x39\xe5\x06\xe9\xd2\xe8\xc0\x4e\x23\x19\xb0\x3c\x6d\xf3\x87\xe5\x24\x05\xed\xbb\xf5\x55\x21\x52\x47\x4b\xe0\x93\xb1\x6f\x31\xdb\x8e\xc3\xd3\xe1\x3f\x18\xb3\x5f\xb3\xe6\x38\xf2\x28\x51\x06\xaf\x03\x5d\x10\xb1\x2e\x4b\x64\x10\xe6\x64\x2f\xad\x59\xb5\xb2\xae\x16\x56\xb5\x10\xaa\xaa\xc0\xaf\xe5\xc6\x0e\x3a\xfe\x6a\xa8\xc6\xcb\xa6\xda\xf0\xc3\x2f\x8b\xeb\x83\xcb\x0b\xc4\x8d\xdd\x9a\xa2\x6b\x96\xe9\x27\xa8\x9f\x55\x13\xaa\xae\x66\x90\x22\x22\x05\xd4\x95\xce\x19\x31\x90\x4a\xc5\x40\xa3\xb6\x81\xcc\x86\xa7\x2c\x57\xdf\x42\x42\x2c\x37\x3f\x11\x93\x55\x15\x5e\x97\xe5\xea\x05\xc9\xc1\xf1\x31\x8a\x45\x6b\x0d\x44\x3c\x05\xdc\x46\xea\xee\x7b\x7b\x74\xd8\x5b\x62\x05\x75\xc8\x2c\xb9\xd9\x84\x55\x0a\x84\x79\xad\x41\xa1\xaa\xea\x0b\x7a\x5c\xa6\x4c\x94\x25\x88\xd8\x39\x3c\xed\xe3\x2c\xd2\x34\x1f\x13\x01\xab\x4d\x11\x4a\xa5\x15\x66\xd2\x4a\xad\xb8\x9c\x5b\xf9\x3e\xea\x10\x10\xfe\xf1\x67\xf4\xfc\xec\xec\xe5\xeb\x17\x97\xf8\x90\x6d\x73\xb0\x96\x1f\xb7\x0e\xd7\x39\x9e\xcd\xfa\x51\x37\xf6\xc9\x1d\x40\x4e\x18\xef\x15\xc1\x04\x2b\xab\x73\x27\xd3\x2b\x01\x9f\x8f\x5a\xc4\xc0\xd0\xba\x57\x7e\xf3\x9b\xcf\x80\x17\x4d\x61\x91\x0f\x81\xf4\x89\x35\x59\xdd\x15\xac\x59\x40\x6f\x05\xee\x80\x1f\xf8\x76\xd4\xda\xba\x37\x93\x19\xdb\x24\x39\xd7\x70\x6b\xf9\x1c\x7c\x65\x62\xc1\x55\xcd\x52\x11\x31\xd1\xf9\x7a\x17\x48\x05\x29\xd3\xc6\x1d\x5b\xb3\xa8\x07\x11\x84\x5f\x9d\x7f\xf7\xfd\xc5\xe5\xf9\xab\x05\x0b\x37\x65\x3b\xf1\x72\xa9\x9b\xfe\x9f\x7d\x74\x26\x42\x53\x47\xc2\x48\xb0\x19\x3f\x40\xdd\xac\x1d\xab\x95\x25\x4b\x90\x54\x87\x8a\x48\x38\xd1\x59\xa4\x2d\xa5\xa0\xf5\xd1\x2a\x28\x25\x55\x2f\x1b\x86\x4d\x6d\x6a\xc6\x18\x4f\x18\xc3\x70\xec\x98\xc9\xa6\x4d\x57\x55\x5f\x97\x70\x50\x06\xd5\x7f\xbd\x56\xa0\x6e\xd2\x8e\x68\xb7\x9f\xb6\x0f\xde\x8e\xde\x6e\x61\x0e\x3b\x76\x47\x88\xba\x05\xfa\x88\xe5\xa3\xc7\x4e\xbe\x4f\xb1\x02\xe1\xc6\xb1\xd5\x25\xe4\x05\x27\x06\xfa\x09\x58\x96\xa6\x5d\x45\xd8\x65\xfd\x46\x6a\x8d\xd1\x6a\x6e\xda\x4b\xa4\x34\xa0\xbc\xc2\xea\xcc\x4d\x9a\x3d\xd3\xc3\xc8\x06\x8d\xe0\x50\xad\xc7\xff\x5c\xec\x16\x83\x37\x3b\x3d\x0e\x8f\xb4\xa7\xa3\x0e\x1d\x64\x8f\x87\x35\x43\xa5\x10\x40\xdb\x52\xc9\x1e\x2f\x0d\x5d\x5a\x52\x06\x66\xbf\x34\x5f\x3d\x98\x1a\xa9\xcc\x8e\x19\x03\x6a\x61\xaa\xba\x0d\x21\x21\x14\x36\x52\xbe\xfd\x08\x88\xb4\xe0\x56\x7f\x84\xbe\x23\xcb\x6e\xe0\xf6\xd1\x70\xb8\x38\xe0\x9a\x6c\xa4\x35\xd1\x95\x54\x78\xa2\xf3\x05\xf7\x3d\x0f\x5d\xec\x98\xa1\x19\xe2\x44\xa4\x96\xa4\x80\x3c\x6f\x29\x20\x4d\x2e\x45\x11\xcd\x5c\xb5\x78\x9d\xd6\x54\x80\x34\x70\xa0\x66\xaa\x15\x07\xb2\x70\x9f\x36\xed\x94\xf2\x29\x5c\x1d\x9f\xc9\x3f\x48\xf7\xd1\x86\x30\x08\xef\xf5\x05\xfe\x0c\x55\x55\x03\x06\x71\x5b\x61\x68\x4b\xb8\x85\x10\xfb\xba\xf6\x3e\xe2\xb5\xc2\xd7\xcd\x4f\xd8\xa8\xad\xcf\x45\xca\x99\xce\x02\xbf\x31\xf7\x51\x9e\xbc\xcb\xbc\xb3\x17\x1f\xee\x49\xa3\xb6\xfe\xf7\xcf\x5f\xde\xff\xfd\xdb\xfb\xbf\xfe\xf8\xe7\xf7\x5f\xe7\xdd\x09\xfc\x69\xca\x16\xba\xfd\x1d\x8b\xf2\xf1\xed\x45\xa9\x6d\xe1\x3e\xaa\x23\x22\xe2\x88\x89\x44\xde\x54\xe7\xb1\xe6\xd4\x2c\xb1\x38\x12\xb5\x39\x53\x9f\x91\x09\xb9\x5a\x9e\x58\xee\x8c\xa4\xd9\x3b\x88\x52\xcb\x62\x38\x15\x60\xc6\x8a\x82\xb9\x5a\x3b\x09\x5c\xa1\xd8\x96\xd0\x7d\x54\x48\xce\xe8\xfe\x44\xa0\x06\x54\xae\x23\x99\x44\x56\x9f\x6a\xdb\x85\x72\x07\xea\x69\xb0\x9a\x6e\x63\x4f\x05\xb7\xe1\x72\x31\x1a\xe3\xb9\x76\x62\x08\x1a\x9c\x92\x0d\xfa\xcd\x41\x39\xb8\xce\xa9\xef\x7b\x48\x51\x1c\x5d\xe4\xd4\x37\x39\xcd\x05\x4e\xe0\x37\x97\x5f\x65\x19\x43\xc2\x44\xff\xd4\xae\xaa\xee\xf0\xff\x2f\x00\x00\xff\xff\xe0\xb0\x80\x5a\x31\x13\x00\x00")

func layoutsApplicationTmplBytes() ([]byte, error) {
	return bindataRead(
		_layoutsApplicationTmpl,
		"layouts/application.tmpl",
	)
}

func layoutsApplicationTmpl() (*asset, error) {
	bytes, err := layoutsApplicationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layouts/application.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _product_showTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x6d\x8f\xd3\xc6\x13\x7f\xcf\xa7\x98\xbf\x41\x7f\xb5\x02\x3b\xe5\x80\x03\x4e\x49\x24\xc4\x71\x12\x52\xa9\x10\x55\xfb\x36\xda\x78\x27\xf6\xc0\x7a\xd7\xec\xae\x2f\x17\xac\x7c\xf7\x6a\xfd\x14\xc7\xde\x24\x77\x07\xaa\xaa\xaa\xf0\xe2\x62\x7b\xe6\xb7\x33\x3f\xcf\xa3\xcb\x72\x4d\x36\x85\xe8\x13\x9a\x42\x58\xd8\x6e\x1f\x00\x4c\x05\xc9\x2f\x60\x37\x39\xce\x02\x8b\x37\x76\x12\x1b\x13\x80\x46\x31\x0b\x8c\xdd\x08\x34\x29\xa2\x0d\x20\xd5\xb8\x9a\x05\x93\x6b\x94\x5c\x69\x33\x59\x09\xbc\x31\x82\x38\xea\xa8\x92\x9f\xcc\xef\x0c\xc5\xc9\xd8\x49\xaa\x32\x5c\xe4\x5a\xf1\x22\xb6\xa6\x83\x72\x58\x9c\xae\x21\x16\xcc\x98\x59\x10\x2b\x69\x19\x49\xd4\x81\x3b\x05\xa0\x75\xe3\xad\x12\x4a\xff\xc9\x34\x31\x4b\x4a\xd6\xee\xb8\x7f\x7d\xdd\x16\x7b\xb1\xe0\x68\x19\x09\xd3\x60\x0c\xe5\xb4\x5a\xf7\x9e\x0c\xcf\x17\x45\x26\xa1\xfe\x13\xbe\x82\x1d\x66\xc2\x84\x40\xbd\x09\x2a\x93\xfd\xca\x66\x4d\x39\xea\xb0\xf3\x61\xac\x1d\x86\x56\xe5\x7b\x87\x57\x18\x85\xe8\x20\x1c\xd1\x66\x24\xe1\x88\xd0\x4c\x26\x08\x8f\x28\x63\x09\xc2\xc5\x0c\xa2\xf7\xee\x97\x89\xae\x48\xa0\xe9\x08\xd9\xc3\x15\x04\xd5\xdb\x98\x05\x4b\x16\x7f\x49\xb4\x2a\x24\x0f\x2b\x80\x8b\x42\x8b\x9f\xca\xb2\x46\x8b\xfe\xf8\xf4\xeb\x76\xfb\x73\x30\x9f\x4e\x04\xf9\x8e\x46\xc9\x47\x07\x4c\x27\x85\xd8\x97\x9d\x4e\x38\x5d\x7f\x2f\x3d\x69\x91\x2d\xc7\xfe\xff\xbb\x18\x3a\x46\xd9\xe1\x60\x7c\xde\xe3\x2b\x43\xcb\x06\x14\x4c\xd3\xa7\xf3\xb2\x8c\x3e\xd6\x32\xd1\x6f\x2c\xc3\xed\x76\x3a\x49\x9f\x0e\xc4\xf2\x71\xba\x38\xb4\x30\xcc\x35\xc5\x18\xcc\x1f\xf5\x40\x3e\xba\x5b\x0e\x25\x1f\x80\x0c\x1d\xab\x98\x1c\xf3\x32\x35\x56\x2b\x99\xcc\xcb\x12\x2c\xb4\x07\x46\xb1\xcb\xe5\x00\x1c\x6e\xf3\xdc\xa3\x98\x33\xe9\xdc\xa9\xf2\xbe\x73\xa6\xba\x3b\x16\xf6\xd6\x80\xda\xa9\xfa\xac\xb1\x4e\x73\x44\x17\x54\x28\x30\xb6\xc8\x83\x71\x34\x5c\xc0\xc3\xab\xf3\x57\xcf\x9f\xbe\x75\x2f\xdf\x6f\x40\x0b\xe6\xd3\x3d\x7b\xf1\xe6\xc5\xe5\xd5\xfd\x74\x5f\xfd\x72\xf9\xe6\xe5\x9b\xfb\xe9\x5e\x5d\x5d\x3e\x3b\x3b\xbb\x9f\xee\xcb\x97\xaf\xcf\x5f\xbf\xbb\xa7\xbf\x57\xee\xff\x61\xdd\x51\x0a\xd4\x37\x5d\xf4\xdc\x3f\xa2\x0c\x7d\xc3\x53\x01\x55\xbd\xe1\xf6\x7d\x07\x20\x59\x86\xb3\x80\xab\x8c\x91\xf4\x55\x93\x5d\x3d\x89\x7e\xa7\x6f\xd8\xb5\x1e\x7f\x1d\x01\x98\xaa\xbc\xea\x4c\xd7\x4c\x14\x38\x0b\xca\xb2\x52\x8b\xde\x5f\x6e\xb7\xc1\xbc\xbd\x6a\xe3\xb8\x96\xf5\x1f\xea\xab\x24\x8e\xa1\xda\x01\x8f\x67\xac\xe9\xb2\x0f\x03\x0f\x2b\x8b\xa4\x20\xde\x70\xc3\x7e\x34\xed\x5f\x0b\x26\x2d\xd9\xcd\x09\xea\x8f\xa4\xe7\x57\xbb\xf1\x27\xe7\xce\xa9\xae\x6b\x23\x2f\x5c\x7d\x0a\x3d\x8e\x1c\x50\x61\x9c\x07\xf3\xc7\x87\xe4\x49\xe6\x85\xed\x8d\x30\x9d\x9a\x33\xaa\x9e\x72\x86\x74\x1d\x0c\xdd\xdb\x50\xb8\x2c\xac\x55\xb2\x39\xd0\x14\xcb\x8c\x76\x47\x36\xcf\xea\x3f\x8b\x45\xae\x29\x63\x6e\xd6\x78\x0c\xfb\x8c\x33\xce\x17\x56\x2d\x62\xa6\x6d\x4d\x7a\xad\x71\xda\x28\x4f\x2f\x3a\x36\x39\x85\xa1\x49\x99\xc6\x71\x1f\xee\x05\xdb\x94\xb2\x04\x8c\x8e\x67\xc1\xa4\xea\x91\x66\x42\xb1\x92\xe1\x8a\x5d\x47\xb9\x4c\x02\x48\x91\x92\xd4\xce\x82\xb3\xe7\xf9\x8d\xe3\xb3\x2b\xea\x1e\x87\xd6\x64\x52\x41\xa6\x71\xaa\x92\xf3\xc5\xab\x87\x7f\xf0\xc2\xd6\xd6\xc3\x91\x9e\x71\xd4\x91\x15\x8b\x71\xa9\xd4\x97\x30\xd1\xb8\xf1\x7b\xe3\x8d\xaa\xe3\xa8\x76\x4d\xd6\xa2\xbe\x1b\xa8\x27\xe8\x0e\x4d\x11\x83\xcb\x43\xb3\x6f\x6f\x8c\x20\xb9\x52\xc1\x6d\xc7\x8f\xd1\xbc\x71\x3e\x20\x9d\xa3\x89\x35\x55\xa5\xad\xa6\x3e\x3d\x1f\xce\x1e\x73\x57\x54\xd7\xd0\x0d\x18\x97\x3b\x95\xd1\x98\x71\xa7\xd9\xe8\xa4\x71\x26\xc7\xd8\x1c\x30\xcb\x97\xd6\x82\x2d\x51\x0c\x30\x32\xc6\x71\x41\x8d\x73\xb5\xc0\x50\x2d\xef\xcf\x60\x1f\x18\xc7\xb7\xaa\x90\x56\x6f\x7c\x43\x94\xe7\xcd\xde\xde\x12\x8b\x9a\x98\x30\xc7\x6d\xf9\x54\x2c\x97\xa8\xc1\x28\x81\xe6\x09\xac\xd8\x52\x53\x0c\x45\x9e\xa3\x36\x4f\x20\x17\xcc\x58\x8a\xe1\xff\xe0\x6a\xb1\x80\x6f\xe4\x1e\x9c\x36\xf3\xbb\xde\xcb\x6d\x1d\x5c\x69\x96\x91\xb1\xec\x04\xd9\x1f\x10\xa4\x92\x90\x33\x94\x64\xd1\x82\x2c\x84\x28\x32\x58\xa1\xb1\x74\x4d\x4a\x63\x06\x78\x13\xab\x84\x2c\x33\x06\x81\x71\x48\x55\x1c\xc1\x3b\x4b\x2c\x83\x94\x2d\x71\x49\x06\x0c\x66\xc0\x29\x66\xd2\x16\x1a\x32\x96\x48\x06\x99\x12\x82\x0c\x60\x41\x26\x53\x3c\xba\x35\x29\xde\xcb\xde\x45\xdb\xde\x1f\xd4\xf4\x4d\xff\x17\x86\xb0\x42\x66\x0b\x8d\xbc\xcd\x4b\x58\x13\x4f\xd0\x42\x18\xd6\x3a\x87\xd3\xb7\xd5\xec\x48\x9e\xa6\xcf\x06\x3c\x6a\x8c\x55\x96\xa1\xe4\xf5\xf0\xd2\x24\xc0\xb3\x4e\x21\x3f\x2e\xbf\x90\xca\x36\x75\xb4\x63\xc0\xdf\x38\x5a\x5b\xc2\xb0\xfe\x56\x10\x00\xf1\x59\xd0\xdd\x6d\x04\xfb\x1b\xf9\x6e\xa5\xdb\xa1\xb8\x1e\x00\x9e\x0d\xaf\xdb\xed\x5a\x8e\x2e\x66\xa0\x51\x30\x8b\xbc\xfb\xa4\x30\xfc\x48\x30\x98\xa2\x3c\x4d\xb9\x2b\xd7\x65\x19\x5d\xe2\x8a\x15\xc2\x7e\x64\x36\xdd\x6e\x03\xbf\x65\x61\x48\x59\xd2\xaf\xec\x65\x19\x7d\x60\x24\xab\x35\xb3\xda\x10\x0f\x15\x71\x76\x08\xd0\x92\x15\x18\x1c\x32\xc3\x15\x93\x76\x66\x1c\x83\x7a\x36\xb9\x1a\xb4\xde\xe4\x0e\x82\xee\x6d\x3e\x64\x31\x5b\xec\xad\x7e\xcd\xca\xd7\x34\xe1\x51\xe0\xef\xd3\x38\x9c\x57\xfb\x73\x46\x2f\xee\xfb\x3f\x5d\xcc\xa3\xdb\x15\x8e\x05\xfe\xdf\x94\x1e\x4c\x18\xb5\x58\xaa\x22\x49\xed\xc9\xd4\xe8\xc9\x7e\x6f\x5a\x38\xa8\xb0\x39\xf6\x07\x66\x84\xb2\x29\xea\x45\xcf\xce\xff\x52\xe2\x1f\x9f\x12\x77\xc8\x89\xbe\xce\xb4\x9e\x9b\x9a\x01\xb3\xfd\x54\xfb\xf9\x6b\x81\x7a\x13\xed\xbe\xd8\x86\x19\xc9\xe8\xb3\xa9\xd6\xf1\x4a\x61\xfe\xa0\x6b\x41\x7f\x05\x00\x00\xff\xff\xb3\xaa\x9b\x4f\x22\x16\x00\x00")

func product_showTmplBytes() ([]byte, error) {
	return bindataRead(
		_product_showTmpl,
		"product_show.tmpl",
	)
}

func product_showTmpl() (*asset, error) {
	bytes, err := product_showTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "product_show.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _qorAssetsJavascriptsQor_demoJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xdd\x6e\x1b\x37\x13\xbd\xf7\x53\x0c\x18\x5f\x90\xd1\x6a\x25\x39\xb1\xbf\x0f\x52\x85\xa2\x71\x62\xa4\x85\x5d\x03\x76\x8a\xa2\x30\x8c\x82\x12\xb9\x12\x23\x8a\x54\x48\xae\x93\x45\xa0\x77\x2f\xc8\xfd\xe3\xca\x72\x2d\x17\x88\x01\xeb\x87\x73\x66\xe6\xcc\x9c\xe1\x68\x1f\xa8\x81\x6b\xc3\xb8\x39\x5f\x52\xe3\x92\x3f\x2c\x37\x36\x7c\x9c\x1c\x65\xb9\x9a\x3b\xa1\x15\xdc\x70\x55\x03\xb0\xf6\x58\xfb\x9e\x3a\x9a\x40\x6e\xab\x8f\x04\xbe\x1f\x01\x00\x04\x48\xca\x78\x46\x73\xe9\x6c\xba\x90\x7a\x46\x65\x6a\xb8\xdd\x68\x65\xc5\x03\x87\x29\x38\x93\xf3\xc9\x51\x40\xfb\xd4\x21\xdc\x7b\xea\xf8\x25\x9d\x49\x6e\x61\x0a\x77\xf7\x93\xae\xf5\x5c\xe7\xca\xc5\x96\x4c\x1b\xc0\xde\x2c\x60\x0a\xc3\x09\x08\xf8\x09\x5a\x5a\xa9\xe4\x6a\xe1\x96\x13\x10\xbd\x5e\xcd\xcb\xff\xed\x64\x4a\x37\xb9\x5d\x46\xd5\xdc\x89\xfb\xd4\x5b\x53\x9b\xcf\xac\x33\x42\x2d\xf0\x69\x32\x1a\x12\x32\xe9\x46\x28\xd9\xec\xf3\xfe\xa4\x1d\x95\x24\xa0\xb7\xe1\x55\x64\xb8\xed\x2c\x69\x99\xb4\x87\x29\xe3\xd6\x19\x5d\xe0\x2a\xcb\xb6\x5b\xb9\xfd\x7b\xae\x95\xe3\xdf\x1c\x4c\x81\xe9\x79\xbe\xe6\xca\xa5\x0b\xee\x3e\x48\xee\x3f\xbe\x2b\x7e\x65\x18\x55\x48\xc3\x37\xda\x38\x44\xbc\xfd\xbc\xf4\xc2\xe8\x84\x21\x32\xd9\x8d\xc9\xa8\xa3\x30\x2d\xb5\xf2\xdc\xf1\x4e\x67\x92\xa8\xce\xca\xbb\x65\x0c\x53\x50\xfc\x2b\xc4\xb3\x50\x93\x24\xe9\xa5\x50\x1c\x47\x59\x12\x40\x3e\x7f\x43\xa0\x9e\x97\xfd\x62\x07\xeb\x41\x62\x37\x73\xf7\x94\xd6\x3b\x89\x4a\xb5\x1a\xaf\x03\xa4\x8e\xb8\xec\x71\xde\xa7\x74\x7b\x71\x22\xa5\xdb\xc3\xa7\x95\x0e\x91\x0f\x11\xba\x04\x1e\xa0\x73\x09\x7c\x24\xf3\x4e\x53\x92\xa8\xc6\xca\xb9\xa5\xdb\x91\xb9\xc3\x90\xa4\xef\xa8\xc1\x6d\x8a\x4a\xe3\xed\x51\xbb\x2e\xda\x94\xb2\xcc\x04\xf3\x32\x4b\xa5\x90\xe7\x38\xaf\x31\x30\x6d\x74\x93\x74\xc6\xa5\x1d\x43\xe5\x55\x9d\xfa\x24\x96\x3b\x3b\x86\xbb\xea\xa4\xed\x6f\xf0\x18\x03\x0a\xc4\xe1\xa6\x6c\x4d\xd2\x98\x33\x21\xe5\xb9\x96\xda\x8c\x01\x99\xc5\x8c\xe2\xd1\xe9\x28\x19\xfd\xff\x7f\xc9\xc9\xf0\x34\x19\xa6\x27\x24\xc2\x7a\x75\x56\xfc\x49\xf4\x28\xc6\x6e\xb4\x50\xee\x05\xd0\xdb\x4e\xec\x57\x59\x96\xed\x22\x3e\x8a\xc5\x52\x8a\xc5\xd2\x5d\x08\x29\x9f\xc3\x94\xe1\x9e\x4d\xed\x1b\x37\xae\x5a\x5f\x1d\x6e\xab\xf7\xfb\x72\x06\x4b\xd5\x0d\x77\xb9\x51\xad\x22\x41\xcc\x70\x3f\x36\x46\x3b\xed\x8a\x0d\x4f\x2f\xb4\x59\x53\x3f\x15\x8d\xc8\x38\x5b\xbb\x58\x50\x1d\x09\x09\x80\xae\x7a\x68\x0c\x6e\x29\xac\x9f\xd3\x2b\xad\xdc\x12\x13\xe8\xc1\xa8\xa5\x87\x58\x0c\xf1\xf9\x30\x89\xac\xcb\xd8\xfa\x51\xe7\xc6\x76\xcc\xeb\x4e\x7c\xa1\x72\xc7\xbb\x00\x1b\x03\x6e\xf9\x5c\x2b\xd6\x05\x7c\xf1\x80\x2b\xea\x96\x69\x26\xb5\x36\x18\x3f\x66\xfb\x86\xc0\x00\xde\xc4\x4e\xb7\x9d\xac\x52\x0a\x5b\x47\x8e\x3b\x2a\x32\xc0\x03\x5c\xf4\xc8\x20\x75\xdc\xba\xd0\x2a\x02\xd9\x3a\x34\x70\xed\x52\xc3\x37\x92\xce\x39\xbe\xe1\x8b\x0f\xdf\x36\xe9\xf1\x28\x81\x26\xfb\x45\x2e\xe5\x5f\x9c\x9a\x40\x00\x21\x52\x2d\x29\xfc\x16\xfa\xd0\xe0\xab\xbd\x57\x6f\xac\x66\x47\xae\x40\x28\xd0\xa4\x21\xe1\xef\x70\xe9\x84\x11\x46\xd0\x83\x95\x0f\x4a\x10\x39\x9c\xd7\x6e\x4e\x98\x4e\x61\x44\xe0\x67\xc0\xfa\x6e\x75\x4f\x60\x0c\x18\xa3\xe1\xd0\x07\x0f\x07\x35\x5f\x8c\xda\xa3\x9a\x2d\xe9\x0c\x5c\xb6\x76\xfb\x46\xed\x17\xc6\xfc\x49\x67\xd6\x28\x63\xa4\x1d\x35\x56\x9a\x43\xc7\x1e\xa8\xcc\xf9\x75\x56\xaf\xd5\xca\x14\xde\x7a\x40\x19\x83\xd7\x70\xf2\x16\x5e\xc3\xd9\xb0\x7e\x19\x0d\x87\xc3\x18\xeb\x7b\x14\xa6\xcf\x7f\x27\x31\x41\x7f\x10\x18\x0e\x06\xf0\x45\xfb\xbc\x76\x39\xd3\xd4\xb0\xa3\x63\x5c\x6f\x69\x92\x1a\x4e\x59\x81\x6b\xae\xb8\xbc\x13\x9e\x66\xc1\xad\xe3\x86\xd1\x02\xa6\xa5\x12\xe5\x8c\x93\xba\x42\xdc\x1f\x05\xd6\xa1\x24\x9e\xdd\xba\xf2\xfe\x79\x4e\x8d\x6b\x8b\x3d\x0b\xd8\x63\x8c\x5e\xd9\x1a\x88\x88\x2f\x1f\xc7\xbe\xd5\x45\xc5\xa8\x28\x8a\xa2\x7f\x75\xd5\x67\x0c\x91\xc6\x93\x2b\x16\xf9\xb5\x49\xfe\xcd\x29\xfd\xdc\xcf\x37\xbe\x13\x7d\xc3\xe7\xda\x30\x44\xd2\xb9\x14\xf3\x55\x54\x71\xa9\xcc\xb1\x9f\xde\xdf\x6e\xaf\x7f\xc7\x68\x40\xd9\x5a\xa8\x41\xf9\x53\x65\x51\xf2\xbd\xa1\x3c\xde\x57\x00\x49\xa0\x62\x36\x7e\xcc\x92\x6c\x93\x26\xd3\x67\xab\x55\x78\xdc\xac\x17\x4d\xfc\x60\x5a\x1b\xd3\xf0\xb0\x62\x93\xe6\x7b\xf8\x71\xa8\x7f\x76\xc3\xfb\xf6\xd9\xe2\xca\xa7\x16\x8f\x68\xba\xd4\xaf\xcb\x79\xdc\x80\x6a\xf1\xed\xab\xed\x80\x26\xff\x47\x6d\x9e\x2d\xa0\x84\xf8\x5b\x42\xd2\x99\xcc\x0d\x6e\x6a\xaf\x4a\xf3\xa6\xfe\x57\xce\x57\xcf\x97\xe6\x67\x74\xc6\x17\x42\x29\xa1\x16\xd7\xd9\xa7\xa5\xb0\x7f\x72\xbe\xda\x3f\xaa\xed\x51\x58\xec\x45\xb9\xf9\xc9\x93\x3d\xda\x13\xf8\x65\xdd\xda\x17\xa0\x66\x73\x46\x7e\x64\x0b\x25\xb5\xee\x05\x2d\xe4\x8a\x5d\x67\x97\xd4\xba\x97\x34\xef\xe9\xc6\x75\xc2\xc5\xab\xe2\x65\xed\xeb\x86\xf9\x11\xdd\xf2\xff\xff\x04\x00\x00\xff\xff\x9e\xe4\x56\xf4\x69\x0e\x00\x00")

func qorAssetsJavascriptsQor_demoJsBytes() ([]byte, error) {
	return bindataRead(
		_qorAssetsJavascriptsQor_demoJs,
		"qor/assets/javascripts/qor_demo.js",
	)
}

func qorAssetsJavascriptsQor_demoJs() (*asset, error) {
	bytes, err := qorAssetsJavascriptsQor_demoJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "qor/assets/javascripts/qor_demo.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _qorAssetsStylesheetsQor_demoCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\x4f\x6f\x13\x31\x10\xc5\xef\xfb\x29\x86\x22\x24\xa8\xf0\x76\x53\xda\x08\x36\x82\x13\x17\xae\x5c\x11\x8a\x26\xf6\x74\x77\x14\xff\xd9\x8e\xa7\x4a\x02\xea\x77\x47\x76\x52\x9a\xd0\x0a\x71\xe1\x66\xbd\xe7\x79\xfb\xf3\x5b\xfb\xe2\x1c\x3e\x63\x1e\x57\x09\xc5\xc1\x97\xa8\x92\xdc\x9d\x55\x4e\x11\xce\x2f\x9a\x96\x8f\x85\x9f\x0d\xc0\x86\x9d\x8e\x3d\xe0\x9d\xa6\x45\x03\x10\x50\x06\x8e\x66\x95\x54\x53\xe8\xa1\x2b\xda\x4d\x8a\x6a\x32\xff\xa0\x1e\x66\xed\x8c\xc2\xa2\xb9\x6f\xfe\x48\x1a\xaf\x9f\x86\x3d\xd9\x84\x75\xcf\x84\xce\x71\x1c\x7a\xe8\xda\x4b\x0a\xd0\xb5\xd7\x25\x11\xc0\x71\x9e\x3c\xee\x7a\xe0\xe8\x39\x92\x59\xf9\x64\xd7\x35\xe5\xe4\x44\x5f\x69\x4a\xa2\xb9\x1e\x46\x0e\xeb\x87\x85\x71\xa8\x24\x18\x07\x82\x36\x38\x6f\x2c\x79\xff\x3c\xd7\xc3\xe4\x37\x87\x8a\x46\xd3\x30\x78\xfa\x78\x76\x9b\xa4\x2d\x11\x13\xdb\x35\xc9\xd9\xf7\xe3\xd9\x0f\x7b\x4a\xa5\xad\x1a\xf4\x3c\xc4\x1e\x2c\x45\x25\x39\x0d\x3c\x9a\x37\x99\x26\x14\xd4\x24\xc7\x39\xb3\x7f\xcc\xd9\x51\x56\x12\x87\x3b\x73\x90\xde\xc2\xa3\xe9\x31\xab\xd9\x10\xad\x9f\x33\x75\xe4\x7c\x62\xd6\xcf\xd7\x9f\xb8\x21\x1e\x46\xed\x21\x26\x09\xe8\x0b\x87\x4d\x3e\x49\x0f\x2f\xe7\xf3\x79\x05\x28\x65\x67\xf2\x64\x15\x02\xc6\x5d\xa9\xb9\x69\x6f\x93\x98\x1b\x26\xef\x96\xcb\xbd\x57\xad\x2a\x07\xb6\x92\x32\x2b\x2d\x97\x36\x45\x45\x8e\x24\xf9\x93\xe7\xbf\xb8\x86\x03\x0e\x04\x79\xc2\x93\x1b\x68\xd1\xdb\xd7\xb3\xae\x7b\x05\x06\xae\xaf\xa6\xed\x1b\x78\xc1\xa1\xf0\x63\xd4\x7d\x37\xff\x05\x83\xc3\x50\x29\xca\xd5\xdf\x9a\x03\xcb\xd5\xe5\xb4\x5d\xfc\x16\xc7\x43\x6b\xef\xba\x47\xb5\xbe\x12\xd9\xeb\xef\x8b\x7c\xff\x2b\x00\x00\xff\xff\x56\xa3\x37\x8d\x78\x03\x00\x00")

func qorAssetsStylesheetsQor_demoCssBytes() ([]byte, error) {
	return bindataRead(
		_qorAssetsStylesheetsQor_demoCss,
		"qor/assets/stylesheets/qor_demo.css",
	)
}

func qorAssetsStylesheetsQor_demoCss() (*asset, error) {
	bytes, err := qorAssetsStylesheetsQor_demoCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "qor/assets/stylesheets/qor_demo.css", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _qorDashboardTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x55\x4d\x6f\xe3\x36\x10\xbd\xef\xaf\x98\xf2\x4e\xeb\xb2\xdb\xc3\x42\xd6\x65\xb7\xe8\x25\x6d\xd2\xa4\x41\xd0\x93\x30\x16\xc7\x12\x6d\x5a\x64\xc8\x91\x1b\xc3\xf0\x7f\x2f\x28\x59\xb1\x1c\x2b\x8e\xd3\x06\x3d\xec\xc1\xb0\x34\x33\x7c\xef\xcd\x97\x98\x2a\xbd\x86\xc2\x60\x08\x53\xf1\x68\xbd\x74\x58\x52\x9e\xcf\xac\xda\x88\xec\x13\xc0\x4b\x77\xa0\x82\xb5\xad\x41\xd7\xec\xad\x6a\xda\x97\x36\x10\x20\xad\xbe\x64\x7f\x56\x3a\x80\x0e\xc0\x15\xc1\xf7\x5f\x7e\xbb\x06\x74\x0e\xe6\xd6\xc3\x1f\xd6\xa7\x49\xf5\xa5\x8b\xfc\x55\x73\xd5\xcc\xbe\x42\x8a\x50\x79\x9a\x4f\x45\xc5\xec\xbe\x26\x49\xd9\xda\x27\x85\x5d\x25\x8f\xd6\xc7\x9f\x00\x46\x5f\x12\x4f\x45\x3e\x33\x58\x2f\x45\x76\x1a\x93\x26\x98\xa5\x33\x9f\x74\xd8\x0f\x34\xbb\xd3\x4c\x23\xe0\xc4\x8f\xd6\xc7\x83\x23\xa0\xcf\xbe\x63\xb0\x3b\xdb\xf8\x82\xa0\xb0\x8a\xc0\xce\x81\x63\x76\x8a\x56\xf6\x12\xe9\x92\x9e\x70\xe5\x0c\x5d\x92\x42\x1f\x3b\x64\x4f\x13\xa5\xd7\xd9\xa7\xf8\xf4\x93\x94\xa0\xe7\x50\xe1\x9a\x80\x71\x66\x08\x9c\x21\x0c\x04\xa8\x14\x0c\xba\x92\xe7\x9d\xb7\xed\xd7\xef\xb8\x22\x90\xf2\x5c\x13\x47\x8e\x46\x13\x57\xb4\x22\x19\x8c\x56\x64\x1b\xee\xbb\x3b\x8e\x91\xe7\x15\xa1\x22\xbf\x8f\x8a\x53\xf0\x79\x24\x4c\xb2\x66\x43\x22\xdb\x6e\x19\xc4\x15\x32\x05\x86\x6b\xaf\xc8\x07\xb1\xdb\xa5\x49\xf5\x79\x4f\xd2\xe5\x7c\x96\x2f\x8e\x66\x27\x33\x0a\x96\x85\xad\x19\x75\x3d\x50\xb0\xdd\x7a\xaa\x15\xf9\xdc\xb4\x3c\xb9\x8d\x3c\x30\xd9\xed\x8e\x29\x7e\xf8\xfa\xde\x74\x0b\xfa\x3f\x54\xd8\xed\x99\xce\x16\xf9\x95\x1a\x79\x72\xd6\x73\xf8\xf8\x2a\xdc\xee\x81\x47\xb2\x3f\xa1\x5a\x29\x23\x4b\xaf\x55\xaf\x46\x2a\x64\xf2\x58\x97\x74\x60\x7c\x11\x5e\x90\x31\xcf\x4e\x80\x54\xd7\xae\xe1\x61\x00\xd3\x13\xcf\x35\x19\x95\xe7\xad\x4f\x80\x56\x53\x11\x18\x3d\x7f\x47\x8e\x9f\x85\x8d\xa3\xa9\x88\x61\x02\x14\x32\x4a\xb6\x65\x69\xa8\xcd\x68\x12\x05\x38\x5d\x2c\xc9\x0b\x78\x96\x70\xe8\xdd\xb8\x1e\x38\x9c\x92\x81\x1c\x7a\x64\xeb\x07\x22\xe5\xa5\x40\xff\x22\x31\xaa\xd5\x7f\x4b\xab\x7f\x9b\x35\xcc\xb6\x1e\x12\xee\x2d\x87\x47\x29\x0b\x6b\xac\x27\xd5\xda\x16\x61\x18\xb1\x08\xd2\x6b\xe7\x0c\x49\x9a\xcf\xa9\x60\x58\xc8\xc6\x45\x5a\xe9\xa9\xb0\x5e\x09\xc8\xa0\x9d\x8f\xfb\xd6\x0a\xdd\x98\x88\xdd\x0e\xd2\xa4\x83\xc9\xde\x54\xb2\xa1\xc0\xe4\x15\x6e\x64\x3f\xbd\x3d\xe8\x5f\xbd\xe7\x7d\x80\xf1\x62\x91\x7f\x13\x2d\x4f\x00\xdb\x0b\xf5\x81\x68\xf9\x3e\x40\x83\x81\xc7\x01\xaf\x30\xf0\x2b\x80\x47\xdb\x11\x0a\xaf\x1d\x43\xf0\xc5\x54\x24\x0b\x5c\x63\x67\x08\xc9\xb7\x0a\x3d\x4f\x56\xba\x9e\x2c\x82\xc8\xd2\xa4\xb3\x9f\xae\x6f\xbf\x53\x67\x37\x08\xfa\x07\x29\x7f\x8e\x4d\x1d\x0e\xde\xdb\x2b\x7e\x83\x5a\xed\xaf\x11\xf8\x66\x9b\x9a\x8f\x96\xbd\x05\x29\xb0\x5e\x63\x68\x27\xb4\xbd\x07\x42\xde\x15\x24\x2a\xef\x7c\xaf\x8c\xe1\x87\x8b\xbd\xa5\x52\xc7\xe1\x20\x05\xf7\xe1\x32\xc5\x4d\xb8\x40\xf0\xd8\xf7\x76\xff\xf7\x4f\x00\x00\x00\xff\xff\x51\x66\x82\x5c\xdc\x09\x00\x00")

func qorDashboardTmplBytes() ([]byte, error) {
	return bindataRead(
		_qorDashboardTmpl,
		"qor/dashboard.tmpl",
	)
}

func qorDashboardTmpl() (*asset, error) {
	bytes, err := qorDashboardTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "qor/dashboard.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _widgetsBannerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x4d\x6f\x83\x30\x0c\x86\xef\xfd\x15\x56\x2e\xdd\x0e\x05\xb1\xe3\x94\x72\xe8\x6d\x52\x4f\xfb\x38\xa3\x0c\xdc\x10\x35\x38\x55\x30\xab\xaa\x28\xff\x7d\xe2\x63\x14\xb6\x71\x71\xfc\xda\x7e\xec\x97\x10\xae\x86\x6b\x48\xde\x90\xd9\x90\x86\x18\x37\x00\xb2\x32\x5f\x50\x5a\xd5\xb6\x7b\xf1\xa9\x88\xd0\x0b\x68\xf9\x66\xb1\x4f\xcb\xb3\xf6\xae\xa3\xea\xb9\xf3\xf6\x61\x1b\x42\x72\x98\xa5\x97\x46\x69\x8c\x71\xfb\x08\xe4\x76\x1e\x2f\xa8\x18\x4a\x24\x46\x3f\x05\x91\x6f\x00\xd6\xfc\xd2\x11\x2b\x43\x73\x6d\x5d\xf5\xee\x3a\xeb\xbf\xe7\x6c\xd7\x10\x8c\x61\x97\x3d\x2d\xda\x00\x42\x30\x27\x48\x8e\x4e\xbb\xe4\xe3\xf5\x38\x78\xba\x7f\xd2\x34\x1a\x5a\x5f\xee\x45\x08\x43\x4f\x8c\x62\xed\xb6\x28\xac\xd3\x4e\x40\xba\x66\x22\x55\x2b\x94\xac\xb3\x3f\x9b\xfe\xe1\xec\xd8\xb0\x45\x31\xcd\xe7\x21\x24\xef\xbd\x10\xa3\x4c\xeb\x6c\xb9\xa1\xb7\x97\x4b\x05\xb5\xc7\xd3\x78\x9c\xa1\xf3\xf2\xb8\x8e\xd9\x11\x8c\xa1\x28\x2e\xde\x34\xca\xdf\x44\x4f\x3c\x0c\xda\xcc\x55\xb9\x4c\x7b\xd8\xfd\xcf\x2d\xd3\x45\x32\x3f\xa7\xc7\x8f\xc9\xef\x00\x00\x00\xff\xff\x06\x93\x69\x64\x17\x02\x00\x00")

func widgetsBannerTmplBytes() ([]byte, error) {
	return bindataRead(
		_widgetsBannerTmpl,
		"widgets/banner.tmpl",
	)
}

func widgetsBannerTmpl() (*asset, error) {
	bytes, err := widgetsBannerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "widgets/banner.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _widgetsBanner2Tmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x6f\x83\x30\x10\x85\x77\x7e\xc5\xc9\x4b\xda\x01\x50\xda\xa9\x15\x61\xc8\x56\xa9\x5b\xbb\x23\x17\x5c\x63\xc5\x9c\xa3\xc3\x24\x8a\x4e\xf7\xdf\x2b\x0a\x42\x90\x2e\x9d\xee\xfc\x9e\xfd\xde\x67\xe6\xab\x8b\x2d\x64\x1f\x26\x46\x87\x16\x44\x92\x04\xa0\x68\xdc\x05\x6a\xaf\xfb\xfe\xa0\xbe\x34\xa2\x21\x98\x46\x5a\x07\x3f\x74\x98\x3e\x29\xe8\xe3\xcd\x9b\xd1\xae\x4f\x96\xc2\x80\xcd\xeb\x40\xfe\x61\xc7\x9c\x1d\x17\xe9\xad\xd3\xd6\x88\xec\x1e\x01\x43\x4a\xe6\x6c\x74\x54\x65\x02\xb0\x6d\xa8\x03\x46\xed\xd0\xd0\xec\x6d\x5d\x0a\xd7\x45\xbf\x7f\x37\xb2\xc0\x8c\xf4\xbc\xba\x05\x50\xb8\xce\x42\x4f\xf5\x41\x31\x67\xef\xc1\x06\x11\xb5\xfd\x51\x55\xf9\x60\x83\x82\x7c\x15\x9e\x37\xee\x52\x26\xff\x28\x7b\xd9\x96\xb5\xfb\x92\x39\xfb\x74\xd1\x1b\x91\x22\x6f\xf7\x1b\x77\x0c\x2d\x34\xb4\x64\xbe\x27\x1c\x87\xa7\x35\xce\x10\x63\x40\x98\x46\x55\x9d\xc9\x75\x9a\x6e\x6a\x4c\x3c\xfe\x6a\x4b\xae\x2e\x67\xc2\x3b\xe0\x3f\x87\x65\x9d\x17\x66\x83\x8d\x48\xf2\x13\x00\x00\xff\xff\x54\xe6\xc9\xf0\xee\x01\x00\x00")

func widgetsBanner2TmplBytes() ([]byte, error) {
	return bindataRead(
		_widgetsBanner2Tmpl,
		"widgets/banner2.tmpl",
	)
}

func widgetsBanner2Tmpl() (*asset, error) {
	bytes, err := widgetsBanner2TmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "widgets/banner2.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _widgetsProductsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xd1\x6a\xdb\x30\x14\x86\xef\xf3\x14\x07\x6d\xb7\xb1\x46\xb6\x2e\xeb\x90\x05\x81\x2c\x30\xd8\x46\x18\xec\x3a\xa8\xf2\xa9\x7d\xe8\xb1\x65\x24\x39\x5d\x11\x7a\xf7\x11\xbb\xee\xda\x0b\x6f\xbd\xb2\x85\xbe\xff\xff\xc4\x91\xd4\xc0\x60\xd9\x84\x50\x0a\xef\xee\xc1\xbb\xfb\x75\x6c\x3c\x22\xf4\xde\x55\x83\x8d\xe1\x74\x62\x0a\x51\xe8\x15\x40\x4a\xde\x74\x35\x42\x71\x7c\xdc\xcb\x79\x05\x00\xa0\x98\xe6\x0e\xeb\x78\x68\x3b\x98\x3e\xeb\x0f\x63\x6c\x44\x0c\x34\x1e\x6f\x4b\x91\x52\xb1\xc7\x5b\x33\x70\x3c\x9a\xd8\xe4\x2c\xe6\xe4\x4b\xdf\x7a\x4d\x6d\x2d\xb4\xa2\xb6\x86\xe0\xed\x98\xfb\x6e\xa8\xfb\xda\x9a\x1a\x7f\xfd\xfc\x76\x09\x1a\x8e\xa5\x10\x20\xb5\x92\xe6\x99\x67\xa1\x2f\x52\x64\x14\x4b\xa7\xd0\x29\x15\x3f\x4c\x8b\x39\x3f\x2f\xeb\x97\xca\x7a\x4f\xf6\x1f\x65\x2a\xf4\xa6\x9b\xb3\x14\xb1\x3d\x4d\x01\xfd\x36\xa5\xe2\x78\xf9\xbd\x78\x2e\x90\x56\xb2\x7f\xd2\x55\x74\x5e\x12\x5a\xc7\xce\x87\xa7\x71\x02\x8c\x0a\x6d\xce\x86\xd8\xdc\x30\xc2\x04\x3c\x96\xfe\xa5\x08\x42\x7c\x60\x2c\xc5\x8d\xb1\x77\xb5\x77\x43\x57\x7d\x86\x37\x9b\xab\xdd\xd5\xfe\x20\xb4\x92\xf4\x5f\xf6\xd3\xbb\xfd\x6e\xbb\x7b\x1d\x7b\x38\xec\xdf\x6f\x36\xaf\x63\xb7\xdb\xeb\x8f\xd7\x5f\x5e\xb0\x4a\x56\x74\x9e\x16\x4a\x32\x4d\x4f\x0e\xbb\x2a\xe7\x95\x92\x03\xeb\x95\x62\xea\xee\x20\x3e\xf4\x58\x8a\x88\xbf\xa3\xb4\x21\x08\xf0\xc8\xa5\x18\x15\xa1\x41\x8c\xf3\xb5\xc8\x8a\x42\x94\x8d\x6b\xf1\x34\x4f\xb3\x18\x79\xa9\xff\x04\x00\x00\xff\xff\x59\x4c\xf4\x8d\xf5\x02\x00\x00")

func widgetsProductsTmplBytes() ([]byte, error) {
	return bindataRead(
		_widgetsProductsTmpl,
		"widgets/products.tmpl",
	)
}

func widgetsProductsTmpl() (*asset, error) {
	bytes, err := widgetsProductsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "widgets/products.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _widgetsSlideshowTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x31\x6f\x83\x30\x10\x85\x77\x7e\xc5\xc9\x8a\x04\x91\x1a\xbc\x53\xc3\xde\xa5\x4b\xba\x47\x16\x1c\xc4\xa9\x31\xc4\x67\x50\x22\x8b\xff\x5e\xe1\x40\xa0\x8b\x65\xde\xbd\x77\xef\xc3\xa2\x52\x23\x94\x5a\x12\xe5\xac\xd6\xf8\x20\xad\x2a\xb4\x70\xef\xec\xe9\x75\x65\x45\x04\x20\x06\xbd\x9a\x82\x4a\x41\x05\xf0\xde\x4a\xd3\x20\x1c\x82\xfa\xd5\xca\x06\x21\xcb\x21\x3d\xa3\x73\xca\x34\xe9\xf9\x2d\xd3\x34\x85\x04\x80\xd0\xaa\x58\xae\x00\xfb\xfa\xad\xf3\x72\x71\xf8\x70\xac\x10\xfd\x3a\x2b\x3b\xe3\xa4\x32\x33\x8e\xf7\xbb\xb6\xf4\x47\x39\x8d\xd3\x24\x78\x5f\x08\x5e\xa9\x71\xb7\x5a\xb5\x0d\x90\x2d\x73\xf6\x3f\x11\xce\x69\x62\xc0\x57\xaf\xe0\x2b\x92\xf7\x68\xaa\x40\x2a\xf8\xa0\x8b\x68\x59\x29\xb4\x32\xbf\xe0\x9e\x3d\xe6\x6c\x26\xe3\x25\x11\x03\x8b\x3a\x67\xe4\x9e\x1a\xe9\x8a\xe8\x18\x5c\x2d\xd6\x39\xe3\x23\x9a\xaa\xb3\xc4\xb7\xe7\x4c\x83\x9f\x17\x91\xa0\xd2\xaa\xde\xbd\xb0\xde\xc6\xdb\x7d\x40\xfb\x4c\x37\xff\xa9\x55\x26\xbd\x11\x2b\x04\x7f\x05\xde\xc9\x19\xf3\x90\xd4\x83\x29\x9d\xea\x4c\x72\xf4\x01\xfb\x90\xc4\xbb\x74\x7c\xdc\x7d\x24\x7e\xf9\x49\x69\x54\x2b\xe7\x50\x06\x71\x18\xc5\x1f\xcb\xc4\x75\x43\x79\xcd\xc0\xd9\x01\x57\xa9\x52\x16\x43\xc3\xb7\x1c\x33\xa8\xa5\x26\x0c\x93\xe9\xf8\x19\xcd\x67\xb4\x81\xfd\x05\x00\x00\xff\xff\x7a\x16\xdc\x66\x41\x02\x00\x00")

func widgetsSlideshowTmplBytes() ([]byte, error) {
	return bindataRead(
		_widgetsSlideshowTmpl,
		"widgets/slideshow.tmpl",
	)
}

func widgetsSlideshowTmpl() (*asset, error) {
	bytes, err := widgetsSlideshowTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "widgets/slideshow.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"auth/confirm_email.html.tpl": authConfirm_emailHtmlTpl,
	"auth/login.html.tpl": authLoginHtmlTpl,
	"auth/recover.html.tpl": authRecoverHtmlTpl,
	"auth/recover_complete.html.tpl": authRecover_completeHtmlTpl,
	"auth/recover_email.html.tpl": authRecover_emailHtmlTpl,
	"auth/register.html.tpl": authRegisterHtmlTpl,
	"category_show.tmpl": category_showTmpl,
	"home_index.tmpl": home_indexTmpl,
	"layouts/application.tmpl": layoutsApplicationTmpl,
	"product_show.tmpl": product_showTmpl,
	"qor/assets/javascripts/qor_demo.js": qorAssetsJavascriptsQor_demoJs,
	"qor/assets/stylesheets/qor_demo.css": qorAssetsStylesheetsQor_demoCss,
	"qor/dashboard.tmpl": qorDashboardTmpl,
	"widgets/banner.tmpl": widgetsBannerTmpl,
	"widgets/banner2.tmpl": widgetsBanner2Tmpl,
	"widgets/products.tmpl": widgetsProductsTmpl,
	"widgets/slideshow.tmpl": widgetsSlideshowTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"auth": &bintree{nil, map[string]*bintree{
		"confirm_email.html.tpl": &bintree{authConfirm_emailHtmlTpl, map[string]*bintree{}},
		"login.html.tpl": &bintree{authLoginHtmlTpl, map[string]*bintree{}},
		"recover.html.tpl": &bintree{authRecoverHtmlTpl, map[string]*bintree{}},
		"recover_complete.html.tpl": &bintree{authRecover_completeHtmlTpl, map[string]*bintree{}},
		"recover_email.html.tpl": &bintree{authRecover_emailHtmlTpl, map[string]*bintree{}},
		"register.html.tpl": &bintree{authRegisterHtmlTpl, map[string]*bintree{}},
	}},
	"category_show.tmpl": &bintree{category_showTmpl, map[string]*bintree{}},
	"home_index.tmpl": &bintree{home_indexTmpl, map[string]*bintree{}},
	"layouts": &bintree{nil, map[string]*bintree{
		"application.tmpl": &bintree{layoutsApplicationTmpl, map[string]*bintree{}},
	}},
	"product_show.tmpl": &bintree{product_showTmpl, map[string]*bintree{}},
	"qor": &bintree{nil, map[string]*bintree{
		"assets": &bintree{nil, map[string]*bintree{
			"javascripts": &bintree{nil, map[string]*bintree{
				"qor_demo.js": &bintree{qorAssetsJavascriptsQor_demoJs, map[string]*bintree{}},
			}},
			"stylesheets": &bintree{nil, map[string]*bintree{
				"qor_demo.css": &bintree{qorAssetsStylesheetsQor_demoCss, map[string]*bintree{}},
			}},
		}},
		"dashboard.tmpl": &bintree{qorDashboardTmpl, map[string]*bintree{}},
	}},
	"widgets": &bintree{nil, map[string]*bintree{
		"banner.tmpl": &bintree{widgetsBannerTmpl, map[string]*bintree{}},
		"banner2.tmpl": &bintree{widgetsBanner2Tmpl, map[string]*bintree{}},
		"products.tmpl": &bintree{widgetsProductsTmpl, map[string]*bintree{}},
		"slideshow.tmpl": &bintree{widgetsSlideshowTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

